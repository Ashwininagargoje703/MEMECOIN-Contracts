diff --git a/node_modules/@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol b/node_modules/@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol
index 023b266..eb0161d 100644
--- a/node_modules/@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol
+++ b/node_modules/@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol
@@ -2,8 +2,9 @@
 pragma solidity >=0.7.5;
 pragma abicoder v2;
 
-import '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';
-import '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';
+
+import "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol";
+import '@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol';
 
 import './IPoolInitializer.sol';
 import './IERC721Permit.sol';
diff --git a/node_modules/@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol b/node_modules/@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol
index 60de385..cbb7746 100644
--- a/node_modules/@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol
+++ b/node_modules/@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol
@@ -31,15 +31,17 @@ library PoolAddress {
     /// @param key The PoolKey
     /// @return pool The contract address of the V3 pool
     function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {
-        require(key.token0 < key.token1);
+        require(key.token0 < key.token1, "PA: TOKEN_ORDER");
         pool = address(
-            uint256(
-                keccak256(
-                    abi.encodePacked(
-                        hex'ff',
-                        factory,
-                        keccak256(abi.encode(key.token0, key.token1, key.fee)),
-                        POOL_INIT_CODE_HASH
+            uint160(
+                uint256(
+                    keccak256(
+                        abi.encodePacked(
+                            hex'ff',
+                            factory,
+                            keccak256(abi.encode(key.token0, key.token1, key.fee)),
+                            POOL_INIT_CODE_HASH
+                        )
                     )
                 )
             )
